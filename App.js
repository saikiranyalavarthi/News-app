import React from "react";
import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
import { createDrawerNavigator } from "@react-navigation/drawer";
import { createBottomTabNavigator } from "@react-navigation/bottom-tabs";
import { Ionicons } from "@expo/vector-icons";

import { SplashScreen } from "./screens/SplashScreen";
import { HomeScreen } from "./screens/HomeScreen";
import CategoryScreen from "./screens/CategoryScreen";

const Stack = createStackNavigator();
const Drawer = createDrawerNavigator();
const Tab = createBottomTabNavigator();

const BottomTabs = () => (
  <Tab.Navigator
    screenOptions={({ route }) => ({
      headerShown: false,
      tabBarIcon: ({ color, size }) => {
        let iconName = "home";

        if (route.name === "‡∞Ü‡∞Ç‡∞ß‡±ç‡∞∞‡∞™‡±ç‡∞∞‡∞¶‡±á‡∞∂‡±ç") iconName = "newspaper-outline";
        else if (route.name === "‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£") iconName = "map-outline";
        else if (route.name === "‡∞ú‡∞ø‡∞≤‡±ç‡∞≤‡∞æ ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å") iconName = "list-outline";

        return <Ionicons name={iconName} size={size} color={color} />;
      },
      tabBarActiveTintColor: "tomato",
      tabBarInactiveTintColor: "gray",
    })}
  >
    <Tab.Screen name="Home" component={HomeScreen} />
    <Tab.Screen
      name="‡∞Ü‡∞Ç‡∞ß‡±ç‡∞∞‡∞™‡±ç‡∞∞‡∞¶‡±á‡∞∂‡±ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞Ü‡∞Ç‡∞ß‡±ç‡∞∞‡∞™‡±ç‡∞∞‡∞¶‡±á‡∞∂‡±ç" }}
    />
    <Tab.Screen
      name="‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£"
      component={CategoryScreen}
      initialParams={{ category: "‡∞§‡±Ü‡∞≤‡∞Ç‡∞ó‡∞æ‡∞£" }}
    />
    <Tab.Screen
      name="‡∞ú‡∞ø‡∞≤‡±ç‡∞≤‡∞æ ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å"
      component={CategoryScreen}
      initialParams={{ category: "‡∞ú‡∞ø‡∞≤‡±ç‡∞≤‡∞æ ‡∞µ‡∞æ‡∞∞‡±ç‡∞§‡∞≤‡±Å" }}
    />
  </Tab.Navigator>
);

const DrawerNavigator = () => (
  <Drawer.Navigator initialRouteName="Bharathsamachar">
    <Drawer.Screen name="Bharathsamachar" component={BottomTabs} />
    <Drawer.Screen
      name="CM View"
      component={CategoryScreen}
      initialParams={{ category: "CM View" }}
    />
    <Drawer.Screen
      name="‡∞ú‡∞æ‡∞§‡±Ä‡∞Ø‡∞Ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞ú‡∞æ‡∞§‡±Ä‡∞Ø‡∞Ç" }}
    />
    <Drawer.Screen
      name="‡∞Ö‡∞Ç‡∞§‡∞∞‡±ç‡∞ú‡∞æ‡∞§‡±Ä‡∞Ø‡∞Ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞Ö‡∞Ç‡∞§‡∞∞‡±ç‡∞ú‡∞æ‡∞§‡±Ä‡∞Ø‡∞Ç" }}
    />
    <Drawer.Screen
      name="‡∞∏‡∞ø‡∞®‡∞ø‡∞Æ‡∞æ"
      component={CategoryScreen}
      initialParams={{ category: "‡∞∏‡∞ø‡∞®‡∞ø‡∞Æ‡∞æ" }}
    />
    <Drawer.Screen
      name="‡∞ï‡±ç‡∞∞‡±à‡∞Æ‡±ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞ï‡±ç‡∞∞‡±à‡∞Æ‡±ç" }}
    />
    <Drawer.Screen
      name="‡∞™‡∞æ‡∞≤‡∞ø‡∞ü‡∞ø‡∞ï‡±ç‡∞∏‡±ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞™‡∞æ‡∞≤‡∞ø‡∞ü‡∞ø‡∞ï‡±ç‡∞∏‡±ç" }}
    />
    <Drawer.Screen
      name="‡∞∏‡±ç‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‡∞∏‡±ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞∏‡±ç‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‡∞∏‡±ç" }}
    />
    <Drawer.Screen
      name="‡∞∏‡±ç‡∞ü‡∞°‡±Ä / ‡∞ú‡∞æ‡∞¨‡±ç‡∞∏‡±ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞∏‡±ç‡∞ü‡∞°‡±Ä / ‡∞ú‡∞æ‡∞¨‡±ç‡∞∏‡±ç" }}
    />
    <Drawer.Screen
      name="‡∞¨‡∞ø‡∞ú‡∞ø‡∞®‡±Ü‡∞∏‡±ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞¨‡∞ø‡∞ú‡∞ø‡∞®‡±Ü‡∞∏‡±ç" }}
    />
    <Drawer.Screen
      name="‡∞≤‡±à‡∞´‡±ç ‡∞∏‡±ç‡∞ü‡±à‡∞≤‡±ç"
      component={CategoryScreen}
      initialParams={{ category: "‡∞≤‡±à‡∞´‡±ç ‡∞∏‡±ç‡∞ü‡±à‡∞≤‡±ç" }}
    />
  </Drawer.Navigator>
);

// üîª Main Stack (Splash ‚ûù Drawer)
export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator screenOptions={{ headerShown: false }}>
        <Stack.Screen name="News-App" component={SplashScreen} />
        <Stack.Screen name="Home" component={DrawerNavigator} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}
